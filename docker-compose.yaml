version: "3.9"
services:
  web:
    depends_on:
      - postgres
    build:
      context: ./StackOverflowClone
      dockerfile: Dockerfile
    platform: linux/amd64
    image: stack_clone:v2
    environment:
      - PORT=8020
    env_file:
      - StackOverflowClone/.prod_env
    ports:
      - "8001:8020"
    command: sh -c "chmod +x /app/migrate.sh && sh /app/migrate.sh && /app/entrypoint.sh"
    networks:
      - mynetwork
  postgres:
    image: postgres
    restart: always
    command: -p 5432
    env_file:
      - StackOverflowClone/.prod_env
    expose:
      - 5432
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - mynetwork
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    restart: always
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "ELASTIC_PASSWORD=elastic"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9222:9200
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - mynetwork
  redis:
    image: redis:7.0.11
    ports:
      - "6379:6379"
    networks:
      - mynetwork
volumes:
  postgres_data:
  esdata:
    driver: local

networks:
  mynetwork: # Define the network
